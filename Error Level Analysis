{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"accelerator":"GPU","colab":{"provenance":[]},"gpuClass":"standard","vscode":{"interpreter":{"hash":"ae0234c7b3f04e6eafca990e433740df3b8489045b2079dac0d895dfea655336"}},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":2048184,"sourceType":"datasetVersion","datasetId":1226991},{"sourceId":10536895,"sourceType":"datasetVersion","datasetId":6519657}],"dockerImageVersionId":30839,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import os \nimport cv2\nfrom PIL import Image, ImageChops, ImageEnhance\nimport numpy as np","metadata":{"id":"ApkzaIayI9XO","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T10:46:04.133520Z","iopub.execute_input":"2025-01-22T10:46:04.133931Z","iopub.status.idle":"2025-01-22T10:46:04.598910Z","shell.execute_reply.started":"2025-01-22T10:46:04.133898Z","shell.execute_reply":"2025-01-22T10:46:04.597660Z"}},"outputs":[],"execution_count":2},{"cell_type":"code","source":"from PIL import Image, ImageChops, ImageEnhance\nimport os\nimport numpy as np\n\ndef convert_to_ela_image(path, quality=90):\n    \"\"\"\n    Perform ELA on an image by saving and reloading it with reduced quality.\n\n    Args:\n        path (str): Path to the image file.\n        quality (int): JPEG compression quality (1–100).\n\n    Returns:\n        Image: ELA image after dynamic scaling.\n    \"\"\"\n    temp_filename = \"temp_file_name.jpg\"\n    ela_filename = \"temp_ela.png\"\n\n    try:\n        # Open and save with compression\n        image = Image.open(path).convert('RGB')\n        image.save(temp_filename, 'JPEG', quality=quality)\n        temp_image = Image.open(temp_filename)\n\n        # Perform ELA\n        ela_image = ImageChops.difference(image, temp_image)\n        extrema = ela_image.getextrema()\n        max_diff = max([ex[1] for ex in extrema])\n        scale = 255.0 / max_diff if max_diff != 0 else 1\n\n        ela_image = ImageEnhance.Brightness(ela_image).enhance(scale)\n        return ela_image\n    except Exception as e:\n        print(f\"Error processing {path}: {e}\")\n        return None\n","metadata":{"id":"8qDs-qYmH4kG","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T10:46:05.687486Z","iopub.execute_input":"2025-01-22T10:46:05.687998Z","iopub.status.idle":"2025-01-22T10:46:05.696966Z","shell.execute_reply.started":"2025-01-22T10:46:05.687958Z","shell.execute_reply":"2025-01-22T10:46:05.695418Z"}},"outputs":[],"execution_count":3},{"cell_type":"markdown","source":"**ELA highlights the differences between the JPEG compression level**\n\nThere are several factors which can help to  check whether an image has been tampered with or not:\n\n1.  Regions with uniform colouring (eg. Solid wall or sky), should have lower ELA (darker).\n \n2.  Similar edges usually have similar brightness. High-contrast edges will look similar to other high-contrast edges, while low-contrast edges will look similar to other low-contrast edges.\n3. Similar textures usually exhibit similar colouring.\n4. Regardless of the original colour, all flat surfaces have the same colouring.\n\n","metadata":{"id":"kO1gLECS2BX3"},"attachments":{}},{"cell_type":"markdown","source":"# **ELA on Real  Images**","metadata":{"id":"n0wwwzrkH4kJ"},"attachments":{}},{"cell_type":"code","source":"def prepare_image(image_path):\n    \"\"\"\n    Preprocess the image:\n      1. Convert to ELA\n      2. Resize to 128x128\n      3. Flatten\n      4. Normalize\n\n    Args:\n        image_path (str): Path to the image file.\n\n    Returns:\n        np.ndarray: Flattened, normalized ELA image array.\n    \"\"\"\n    ela_image = convert_to_ela_image(image_path, 90)\n    if ela_image is None:\n        raise ValueError(f\"Failed to process image: {image_path}\")\n\n    ela_image = ela_image.resize((128, 128))\n    return np.array(ela_image).flatten() / 255.0\n","metadata":{"executionInfo":{"elapsed":7533,"status":"ok","timestamp":1671118119953,"user":{"displayName":"Jayant Meshram","userId":"07212980995143520242"},"user_tz":-330},"id":"YSu2RY3QH4kM","outputId":"06872fcf-823d-4cef-fc17-ca055815828c","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T10:46:08.352726Z","iopub.execute_input":"2025-01-22T10:46:08.353130Z","iopub.status.idle":"2025-01-22T10:46:08.360762Z","shell.execute_reply.started":"2025-01-22T10:46:08.353100Z","shell.execute_reply":"2025-01-22T10:46:08.358906Z"}},"outputs":[],"execution_count":4},{"cell_type":"markdown","source":"*Result on Real image shows that the edges are quite similar looking. The Surface has consitency in term of textures. Uniform coloured pixels are reduces to lower values.*","metadata":{"id":"5XGtwcIa2iLN"},"attachments":{}},{"cell_type":"markdown","source":"# **ELA on Tampered Images**","metadata":{"id":"8SLkDH0yH4kO"},"attachments":{}},{"cell_type":"code","source":"X = []\nY = []\n\nReal_path = '/kaggle/input/image-tampering-detection/ELA_Training/CASIA2/Au'\nTampered_path = '/kaggle/input/image-tampering-detection/ELA_Training/CASIA2/Tp'\npaths = [Real_path, Tampered_path]\n\nlabel = 0\nfor i in paths:\n    print(f\"Processing images in: {i}\")\n    for name in os.listdir(i):\n        img_path = os.path.join(i, name)\n        if img_path.endswith(('.jpeg', '.jpg', '.png')):\n            try:\n                img = prepare_image(img_path)\n                X.append(img)\n                Y.append(label)\n                if len(Y) % 1000 == 0:\n                    print(f\"Processed {len(Y)} images...\")\n            except Exception as e:\n                print(f\"Skipping {img_path}: {e}\")\n    label = 1\n","metadata":{"executionInfo":{"elapsed":6073,"status":"ok","timestamp":1671118126007,"user":{"displayName":"Jayant Meshram","userId":"07212980995143520242"},"user_tz":-330},"id":"bsMUvcLHH4lo","outputId":"46012b27-524e-4ffc-90d7-4d1efe79a667","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T10:46:16.769073Z","iopub.execute_input":"2025-01-22T10:46:16.769615Z","iopub.status.idle":"2025-01-22T10:48:57.696616Z","shell.execute_reply.started":"2025-01-22T10:46:16.769573Z","shell.execute_reply":"2025-01-22T10:48:57.695009Z"}},"outputs":[{"name":"stdout","text":"Processing images in: /kaggle/input/image-tampering-detection/ELA_Training/CASIA2/Au\nProcessed 1000 images...\nProcessed 2000 images...\nProcessed 3000 images...\nProcessed 4000 images...\nProcessed 5000 images...\nProcessed 6000 images...\nProcessed 7000 images...\nProcessing images in: /kaggle/input/image-tampering-detection/ELA_Training/CASIA2/Tp\nProcessed 8000 images...\nProcessed 9000 images...\n","output_type":"stream"}],"execution_count":5},{"cell_type":"markdown","source":"*Result on Tampered image clearly highlights the different contrast among edges. Although Uniform coloured pixels are reduces to lower values, surface do not have uniformity in textures.*","metadata":{"id":"f5DDaJwh3JdM"},"attachments":{}},{"cell_type":"markdown","source":"Various Compression Quality values affects the resultant ELA differenlty. Although as we lower the value of quality, there isnt much substantial difference between the earlier and current resave. Hence, Quality can be anything above 80, and purely subjective.\n\n*Code for trackbar tweaking:*\n[link text](https://)","metadata":{"id":"0p5Z8pLe3guv"},"attachments":{}},{"cell_type":"markdown","source":"CASIA2.0 Has .jpg, .tig, and some of .bmp and .png images. Everything else tha .jpg(and .jpeg) is redundant, since we are applying ELA. \n\nError Level Analysis works only with lossy compressions(jpg).","metadata":{"id":"KssVc__L5tiE"},"attachments":{}},{"cell_type":"code","source":"print(\"Total no of Real Images: \",Y.count(0))\nprint(\"Total no of Tampered Images: \",Y.count(1))","metadata":{"executionInfo":{"elapsed":415,"status":"ok","timestamp":1671110159029,"user":{"displayName":"JAYANT MESHRAM","userId":"16262923672447143860"},"user_tz":-330},"id":"R28eQO765WW3","outputId":"ab881261-8b6b-400b-f11a-a39cf0af7d00","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T11:08:45.185423Z","iopub.execute_input":"2025-01-22T11:08:45.186039Z","iopub.status.idle":"2025-01-22T11:08:45.197074Z","shell.execute_reply.started":"2025-01-22T11:08:45.185999Z","shell.execute_reply":"2025-01-22T11:08:45.193930Z"}},"outputs":[{"name":"stdout","text":"Total no of Real Images:  7437\nTotal no of Tampered Images:  2064\n","output_type":"stream"}],"execution_count":6},{"cell_type":"code","source":"from tensorflow.keras.utils import to_categorical\nimport numpy as np\n\n# Convert X and Y into the correct format\nX = np.array(X).astype(\"float64\")\nY = to_categorical(Y, 2)  # Converts the labels to one-hot encoding\nX = X.reshape(-1, 128, 128, 3)  # Reshape X to have the shape (num_samples, height, width, channels)\n","metadata":{"id":"6E57u0m79VIo","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T11:08:47.123657Z","iopub.execute_input":"2025-01-22T11:08:47.124186Z","iopub.status.idle":"2025-01-22T11:09:10.907213Z","shell.execute_reply.started":"2025-01-22T11:08:47.124148Z","shell.execute_reply":"2025-01-22T11:09:10.905706Z"}},"outputs":[],"execution_count":7},{"cell_type":"markdown","source":"**Data Imbalance**\n\nDropping 5000 samples from X to balance the data\n\nThis we can use for testing","metadata":{"id":"qCKb6BYd7Zjs"},"attachments":{}},{"cell_type":"code","source":"X_test = X[:5000]\nY_test = Y[:5000]\n\nY = Y[5000:]\nX = X[5000:]","metadata":{"id":"ejZOTP9B9mJk","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T11:09:15.257961Z","iopub.execute_input":"2025-01-22T11:09:15.258925Z","iopub.status.idle":"2025-01-22T11:09:15.265891Z","shell.execute_reply.started":"2025-01-22T11:09:15.258869Z","shell.execute_reply":"2025-01-22T11:09:15.264634Z"}},"outputs":[],"execution_count":8},{"cell_type":"markdown","source":"Saving Data","metadata":{"id":"lHDRyEzLF7FI"},"attachments":{}},{"cell_type":"code","source":"import os\nimport numpy as np\n\n\n# Ensure the directory exists\nif not os.path.exists('ELA_Data'):\n    os.makedirs('ELA_Data')\n\n# Save the processed data\nnp.save('ELA_Data/X', X)\nnp.save('ELA_Data/Y', Y)\nnp.save('ELA_Data/X_test', X_test)  # X_test should be defined\nnp.save('ELA_Data/Y_test', Y_test)  # Y_test should be defined\n","metadata":{"id":"j5tvaY2gF34u","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T11:09:42.192939Z","iopub.execute_input":"2025-01-22T11:09:42.193431Z","iopub.status.idle":"2025-01-22T11:09:44.878905Z","shell.execute_reply.started":"2025-01-22T11:09:42.193380Z","shell.execute_reply":"2025-01-22T11:09:44.877549Z"}},"outputs":[],"execution_count":9},{"cell_type":"markdown","source":"Loading Data","metadata":{"id":"pbR7JK5yF-zg"},"attachments":{}},{"cell_type":"code","source":"X = np.load('ELA_Data/X.npy')\nY = np.load('ELA_Data/Y.npy')","metadata":{"id":"Z_I7NR72GAn9","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T11:09:46.753210Z","iopub.execute_input":"2025-01-22T11:09:46.753717Z","iopub.status.idle":"2025-01-22T11:09:47.276131Z","shell.execute_reply.started":"2025-01-22T11:09:46.753672Z","shell.execute_reply":"2025-01-22T11:09:47.275085Z"}},"outputs":[],"execution_count":10},{"cell_type":"markdown","source":"Split the new X and Y into training and validation data using train_test_split","metadata":{"id":"wo7jKnEN-Ac1"},"attachments":{}},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\n\nX_train, X_val, Y_train, Y_val = train_test_split(X, Y, test_size = 0.20, random_state=5)\n","metadata":{"id":"zI2rgiNC9-PF","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T11:09:49.588056Z","iopub.execute_input":"2025-01-22T11:09:49.588428Z","iopub.status.idle":"2025-01-22T11:09:50.990801Z","shell.execute_reply.started":"2025-01-22T11:09:49.588394Z","shell.execute_reply":"2025-01-22T11:09:50.989431Z"}},"outputs":[],"execution_count":11},{"cell_type":"code","source":"#verify\nprint(len(X_train) , len(Y_train) )\nprint(len(X_val) , len(Y_val))\nprint(Y_val[:15])","metadata":{"executionInfo":{"elapsed":11,"status":"ok","timestamp":1671118138179,"user":{"displayName":"Jayant Meshram","userId":"07212980995143520242"},"user_tz":-330},"id":"sV7-F1H7HKm0","outputId":"06a56c73-23f6-4d69-c5e4-6abf9607b015","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T11:09:53.549366Z","iopub.execute_input":"2025-01-22T11:09:53.550257Z","iopub.status.idle":"2025-01-22T11:09:58.310102Z","shell.execute_reply.started":"2025-01-22T11:09:53.550211Z","shell.execute_reply":"2025-01-22T11:09:58.308897Z"}},"outputs":[{"name":"stdout","text":"3600 3600\n901 901\n[[1. 0.]\n [1. 0.]\n [0. 1.]\n [0. 1.]\n [0. 1.]\n [0. 1.]\n [1. 0.]\n [0. 1.]\n [1. 0.]\n [1. 0.]\n [0. 1.]\n [1. 0.]\n [0. 1.]\n [1. 0.]\n [1. 0.]]\n","output_type":"stream"}],"execution_count":12},{"cell_type":"code","source":"from tensorflow.keras.applications import DenseNet121","metadata":{"id":"3QaZJlYHH4l2","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T11:09:59.325308Z","iopub.execute_input":"2025-01-22T11:09:59.325721Z","iopub.status.idle":"2025-01-22T11:09:59.803021Z","shell.execute_reply.started":"2025-01-22T11:09:59.325692Z","shell.execute_reply":"2025-01-22T11:09:59.801824Z"}},"outputs":[],"execution_count":13},{"cell_type":"code","source":"models = {'densenet': DenseNet121}","metadata":{"id":"ZdOJ9rQKH4l2","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T11:10:02.572602Z","iopub.execute_input":"2025-01-22T11:10:02.573077Z","iopub.status.idle":"2025-01-22T11:10:02.578432Z","shell.execute_reply.started":"2025-01-22T11:10:02.573030Z","shell.execute_reply":"2025-01-22T11:10:02.577076Z"}},"outputs":[],"execution_count":14},{"cell_type":"markdown","source":"Setting the configurations for Epochs; Batch_size; Initial LR etc.","metadata":{"id":"mDfaFBcDCfOa"},"attachments":{}},{"cell_type":"code","source":"class Config:\n    epochs = 30\n    batch_size = 32\n    lr = 1e-4\n    name = 'densenet'\n    n_labels = 2\n    image_size = (128, 128)\n    decay = 1e-6\n    momentum = 0.95\n    nesterov = False","metadata":{"id":"vNQ53iFJH4l3","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T11:10:05.391226Z","iopub.execute_input":"2025-01-22T11:10:05.393749Z","iopub.status.idle":"2025-01-22T11:10:05.412521Z","shell.execute_reply.started":"2025-01-22T11:10:05.393638Z","shell.execute_reply":"2025-01-22T11:10:05.410954Z"}},"outputs":[],"execution_count":15},{"cell_type":"code","source":"from tensorflow.keras.optimizers import SGD, Adam\nfrom tensorflow.keras.layers import Dense, GlobalAveragePooling2D, Flatten\nimport tensorflow as tf\nfrom tensorflow.keras import Sequential,Model\n\nMETRICS = [tf.keras.metrics.CategoricalAccuracy(name='accuracy'),tf.keras.metrics.AUC(name='auc')]","metadata":{"id":"LuLc0-uDH4l3","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T11:10:07.608648Z","iopub.execute_input":"2025-01-22T11:10:07.609182Z","iopub.status.idle":"2025-01-22T11:10:07.748466Z","shell.execute_reply.started":"2025-01-22T11:10:07.609139Z","shell.execute_reply":"2025-01-22T11:10:07.746895Z"}},"outputs":[],"execution_count":16},{"cell_type":"markdown","source":"DenseNet121; No layers have been freeze, since the prior one is trained on imagenet classification task, we have use of it, we are just borrowing the architecture.\n\nAdding FC with 1024\n\nAdded Output Layer with 2 Nodes","metadata":{"id":"EcNVz3oICCis"},"attachments":{}},{"cell_type":"code","source":"base_model = models['densenet'](include_top=False, weights='imagenet', input_shape=(128, 128, 3))\n\nx = GlobalAveragePooling2D()(base_model.output)\nx = Dense(1024, activation='relu')(x)\noutput = Dense(2, activation='softmax')(x)\n    \nmodel = Model(base_model.inputs, output)\n    \nmodel.compile(\n    loss='categorical_crossentropy',\n    optimizer=SGD(\n        learning_rate=Config.lr,  # Replace `lr` with `learning_rate`\n        momentum=Config.momentum,\n        nesterov=Config.nesterov\n    ),\n    metrics=METRICS\n)\n","metadata":{"executionInfo":{"elapsed":2704,"status":"ok","timestamp":1671118149586,"user":{"displayName":"Jayant Meshram","userId":"07212980995143520242"},"user_tz":-330},"id":"O5a-cgjoH4l3","outputId":"9db38168-1a30-4416-cc2d-b41bd2d8564b","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T11:10:12.524634Z","iopub.execute_input":"2025-01-22T11:10:12.525092Z","iopub.status.idle":"2025-01-22T11:10:18.574779Z","shell.execute_reply.started":"2025-01-22T11:10:12.525060Z","shell.execute_reply":"2025-01-22T11:10:18.573570Z"}},"outputs":[{"name":"stdout","text":"Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/densenet/densenet121_weights_tf_dim_ordering_tf_kernels_notop.h5\n\u001b[1m29084464/29084464\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 0us/step\n","output_type":"stream"}],"execution_count":17},{"cell_type":"markdown","source":"LearningRateScheduling, which decreases LR after 10 epoch by 10%. (Results stopped improving at 5 )","metadata":{"id":"QnzAo5S2Bx6y"},"attachments":{}},{"cell_type":"code","source":"def scheduler(epoch):\n    if epoch < 10:\n      return Config.lr\n    else:\n      return Config.lr * (0.9)   ","metadata":{"id":"SnMyhiBqH4l5","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T11:10:19.439397Z","iopub.execute_input":"2025-01-22T11:10:19.439920Z","iopub.status.idle":"2025-01-22T11:10:19.446864Z","shell.execute_reply.started":"2025-01-22T11:10:19.439874Z","shell.execute_reply":"2025-01-22T11:10:19.445488Z"}},"outputs":[],"execution_count":18},{"cell_type":"code","source":"#callbacks\nfrom tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint, LearningRateScheduler, TensorBoard\n\nreduce_lr = LearningRateScheduler(scheduler)\ncallbacks_all = [reduce_lr]\n","metadata":{"id":"RmrXuBWcH4l5","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T11:10:22.430627Z","iopub.execute_input":"2025-01-22T11:10:22.430984Z","iopub.status.idle":"2025-01-22T11:10:22.440303Z","shell.execute_reply.started":"2025-01-22T11:10:22.430959Z","shell.execute_reply":"2025-01-22T11:10:22.438943Z"}},"outputs":[],"execution_count":19},{"cell_type":"code","source":"history = model.fit(\n    X_train, Y_train,\n    epochs=Config.epochs,\n    batch_size=Config.batch_size,\n    validation_data = (X_val, Y_val),\n    callbacks = callbacks_all\n)","metadata":{"executionInfo":{"elapsed":499790,"status":"ok","timestamp":1671118649365,"user":{"displayName":"Jayant Meshram","userId":"07212980995143520242"},"user_tz":-330},"id":"qdsGl60KH4l5","outputId":"c6b77ea1-ab91-464a-c6a7-ac7dcf9827ea","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T11:10:27.164994Z","iopub.execute_input":"2025-01-22T11:10:27.165496Z","iopub.status.idle":"2025-01-22T14:54:26.094951Z","shell.execute_reply.started":"2025-01-22T11:10:27.165440Z","shell.execute_reply":"2025-01-22T14:54:26.090216Z"}},"outputs":[{"name":"stdout","text":"Epoch 1/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m520s\u001b[0m 4s/step - accuracy: 0.6263 - auc: 0.6912 - loss: 0.6377 - val_accuracy: 0.3840 - val_auc: 0.3864 - val_loss: 1.0406 - learning_rate: 1.0000e-04\nEpoch 2/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m453s\u001b[0m 4s/step - accuracy: 0.8791 - auc: 0.9513 - loss: 0.2880 - val_accuracy: 0.4795 - val_auc: 0.4936 - val_loss: 0.8122 - learning_rate: 1.0000e-04\nEpoch 3/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m457s\u001b[0m 4s/step - accuracy: 0.9308 - auc: 0.9789 - loss: 0.2019 - val_accuracy: 0.6249 - val_auc: 0.6993 - val_loss: 0.6372 - learning_rate: 1.0000e-04\nEpoch 4/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m452s\u001b[0m 4s/step - accuracy: 0.9478 - auc: 0.9897 - loss: 0.1535 - val_accuracy: 0.7347 - val_auc: 0.8334 - val_loss: 0.4989 - learning_rate: 1.0000e-04\nEpoch 5/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m506s\u001b[0m 4s/step - accuracy: 0.9687 - auc: 0.9942 - loss: 0.1217 - val_accuracy: 0.8613 - val_auc: 0.9439 - val_loss: 0.3050 - learning_rate: 1.0000e-04\nEpoch 6/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m447s\u001b[0m 4s/step - accuracy: 0.9726 - auc: 0.9959 - loss: 0.1022 - val_accuracy: 0.9046 - val_auc: 0.9674 - val_loss: 0.2304 - learning_rate: 1.0000e-04\nEpoch 7/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m448s\u001b[0m 4s/step - accuracy: 0.9782 - auc: 0.9976 - loss: 0.0778 - val_accuracy: 0.9223 - val_auc: 0.9741 - val_loss: 0.2075 - learning_rate: 1.0000e-04\nEpoch 8/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m462s\u001b[0m 4s/step - accuracy: 0.9782 - auc: 0.9977 - loss: 0.0757 - val_accuracy: 0.9267 - val_auc: 0.9753 - val_loss: 0.2058 - learning_rate: 1.0000e-04\nEpoch 9/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m447s\u001b[0m 4s/step - accuracy: 0.9871 - auc: 0.9993 - loss: 0.0513 - val_accuracy: 0.9323 - val_auc: 0.9770 - val_loss: 0.2002 - learning_rate: 1.0000e-04\nEpoch 10/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m443s\u001b[0m 4s/step - accuracy: 0.9947 - auc: 0.9997 - loss: 0.0428 - val_accuracy: 0.9334 - val_auc: 0.9775 - val_loss: 0.1947 - learning_rate: 1.0000e-04\nEpoch 11/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m446s\u001b[0m 4s/step - accuracy: 0.9880 - auc: 0.9992 - loss: 0.0445 - val_accuracy: 0.9290 - val_auc: 0.9786 - val_loss: 0.1954 - learning_rate: 9.0000e-05\nEpoch 12/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m449s\u001b[0m 4s/step - accuracy: 0.9939 - auc: 0.9998 - loss: 0.0327 - val_accuracy: 0.9323 - val_auc: 0.9771 - val_loss: 0.2001 - learning_rate: 9.0000e-05\nEpoch 13/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m440s\u001b[0m 4s/step - accuracy: 0.9976 - auc: 1.0000 - loss: 0.0213 - val_accuracy: 0.9334 - val_auc: 0.9774 - val_loss: 0.2025 - learning_rate: 9.0000e-05\nEpoch 14/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m444s\u001b[0m 4s/step - accuracy: 0.9975 - auc: 0.9999 - loss: 0.0213 - val_accuracy: 0.9356 - val_auc: 0.9778 - val_loss: 0.2067 - learning_rate: 9.0000e-05\nEpoch 15/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m497s\u001b[0m 4s/step - accuracy: 0.9975 - auc: 1.0000 - loss: 0.0206 - val_accuracy: 0.9367 - val_auc: 0.9783 - val_loss: 0.2062 - learning_rate: 9.0000e-05\nEpoch 16/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m436s\u001b[0m 4s/step - accuracy: 0.9991 - auc: 1.0000 - loss: 0.0166 - val_accuracy: 0.9334 - val_auc: 0.9780 - val_loss: 0.2043 - learning_rate: 9.0000e-05\nEpoch 17/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m438s\u001b[0m 4s/step - accuracy: 0.9953 - auc: 0.9999 - loss: 0.0229 - val_accuracy: 0.9334 - val_auc: 0.9774 - val_loss: 0.2121 - learning_rate: 9.0000e-05\nEpoch 18/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m445s\u001b[0m 4s/step - accuracy: 0.9985 - auc: 1.0000 - loss: 0.0150 - val_accuracy: 0.9345 - val_auc: 0.9773 - val_loss: 0.2115 - learning_rate: 9.0000e-05\nEpoch 19/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m437s\u001b[0m 4s/step - accuracy: 0.9995 - auc: 1.0000 - loss: 0.0117 - val_accuracy: 0.9345 - val_auc: 0.9770 - val_loss: 0.2103 - learning_rate: 9.0000e-05\nEpoch 20/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m436s\u001b[0m 4s/step - accuracy: 0.9980 - auc: 1.0000 - loss: 0.0157 - val_accuracy: 0.9356 - val_auc: 0.9770 - val_loss: 0.2149 - learning_rate: 9.0000e-05\nEpoch 21/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m435s\u001b[0m 4s/step - accuracy: 0.9989 - auc: 1.0000 - loss: 0.0148 - val_accuracy: 0.9356 - val_auc: 0.9767 - val_loss: 0.2147 - learning_rate: 9.0000e-05\nEpoch 22/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m431s\u001b[0m 4s/step - accuracy: 0.9976 - auc: 1.0000 - loss: 0.0111 - val_accuracy: 0.9367 - val_auc: 0.9773 - val_loss: 0.2146 - learning_rate: 9.0000e-05\nEpoch 23/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m443s\u001b[0m 4s/step - accuracy: 1.0000 - auc: 1.0000 - loss: 0.0083 - val_accuracy: 0.9378 - val_auc: 0.9769 - val_loss: 0.2175 - learning_rate: 9.0000e-05\nEpoch 24/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m436s\u001b[0m 4s/step - accuracy: 0.9996 - auc: 1.0000 - loss: 0.0078 - val_accuracy: 0.9401 - val_auc: 0.9751 - val_loss: 0.2245 - learning_rate: 9.0000e-05\nEpoch 25/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m431s\u001b[0m 4s/step - accuracy: 1.0000 - auc: 1.0000 - loss: 0.0059 - val_accuracy: 0.9356 - val_auc: 0.9760 - val_loss: 0.2266 - learning_rate: 9.0000e-05\nEpoch 26/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m430s\u001b[0m 4s/step - accuracy: 0.9984 - auc: 1.0000 - loss: 0.0107 - val_accuracy: 0.9345 - val_auc: 0.9753 - val_loss: 0.2302 - learning_rate: 9.0000e-05\nEpoch 27/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m434s\u001b[0m 4s/step - accuracy: 0.9988 - auc: 1.0000 - loss: 0.0100 - val_accuracy: 0.9378 - val_auc: 0.9763 - val_loss: 0.2256 - learning_rate: 9.0000e-05\nEpoch 28/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m428s\u001b[0m 4s/step - accuracy: 0.9988 - auc: 1.0000 - loss: 0.0076 - val_accuracy: 0.9378 - val_auc: 0.9754 - val_loss: 0.2367 - learning_rate: 9.0000e-05\nEpoch 29/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m431s\u001b[0m 4s/step - accuracy: 0.9994 - auc: 1.0000 - loss: 0.0053 - val_accuracy: 0.9378 - val_auc: 0.9755 - val_loss: 0.2268 - learning_rate: 9.0000e-05\nEpoch 30/30\n\u001b[1m113/113\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m433s\u001b[0m 4s/step - accuracy: 0.9990 - auc: 1.0000 - loss: 0.0072 - val_accuracy: 0.9367 - val_auc: 0.9758 - val_loss: 0.2294 - learning_rate: 9.0000e-05\n","output_type":"stream"}],"execution_count":20},{"cell_type":"markdown","source":"# **Results and Analysis**","metadata":{"id":"XZQMy6Wh_cOF"},"attachments":{}},{"cell_type":"markdown","source":"**1. Loss**","metadata":{"id":"NWtiZcx5_w6N"},"attachments":{}},{"cell_type":"code","source":"import matplotlib.pyplot as plt\ncolors = plt.rcParams['axes.prop_cycle'].by_key()['color']\n\ndef plot_loss(history, label, n):\n    # Use a log scale on y-axis to show the wide range of values.\n    plt.plot(history.epoch, history.history['loss'],\n               color='blue', label='Train ' + label)\n    plt.plot(history.epoch, history.history['val_loss'],color='green', label='Val ' + label,linestyle=\"--\")\n    plt.ylim([0, plt.ylim()[1]])         \n    plt.xlabel('Epoch')\n    plt.ylabel('Loss')\n    plt.legend()\n\nplot_loss(history, Config.name, 0)","metadata":{"executionInfo":{"elapsed":482,"status":"ok","timestamp":1671118771391,"user":{"displayName":"Jayant Meshram","userId":"07212980995143520242"},"user_tz":-330},"id":"ATmH8qNRH4l6","outputId":"f4eb16b6-df5d-40e0-a148-910a0d2973f4","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T15:01:44.307323Z","iopub.execute_input":"2025-01-22T15:01:44.308017Z","iopub.status.idle":"2025-01-22T15:01:44.734164Z","shell.execute_reply.started":"2025-01-22T15:01:44.307938Z","shell.execute_reply":"2025-01-22T15:01:44.732890Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":21},{"cell_type":"markdown","source":"Loss itselfs starts very low for both training and validation. .5 and .9 respectively. Loss shows tremendous drop at initial epochs upto 5. Then it stops decreasing and gives us a flatline.","metadata":{"id":"cUtEHVqD_t_E"},"attachments":{}},{"cell_type":"markdown","source":"**2. AUC**","metadata":{"id":"rSa4ospyASmW"},"attachments":{}},{"cell_type":"code","source":"plt.plot(history.epoch, history.history['auc'], color='blue', label='Train')\nplt.plot(history.epoch, history.history['val_auc'],color='green', label='Val')\nplt.xlabel('Epoch')\nplt.xlim([0,30])\nplt.ylabel('AUC')\nplt.legend()","metadata":{"executionInfo":{"elapsed":10,"status":"ok","timestamp":1671118773706,"user":{"displayName":"Jayant Meshram","userId":"07212980995143520242"},"user_tz":-330},"id":"owq2914BH4l6","outputId":"ae5889f5-8e30-48aa-8863-53e960973e92","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T15:01:50.368908Z","iopub.execute_input":"2025-01-22T15:01:50.369319Z","iopub.status.idle":"2025-01-22T15:01:50.635319Z","shell.execute_reply.started":"2025-01-22T15:01:50.369284Z","shell.execute_reply":"2025-01-22T15:01:50.633817Z"}},"outputs":[{"execution_count":22,"output_type":"execute_result","data":{"text/plain":"<matplotlib.legend.Legend at 0x7f461361f2e0>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":22},{"cell_type":"markdown","source":"AUC curve shows high growth in initial epochs till 5. Then both, for training and validation, stopped improving and became flatline.","metadata":{"id":"IKE9dhoYAZcI"},"attachments":{}},{"cell_type":"markdown","source":"**3. Accuracy**","metadata":{"id":"wbE8oVtTA9Dm"},"attachments":{}},{"cell_type":"code","source":"plt.plot(history.epoch, history.history['accuracy'], color='blue', label='Train')\nplt.plot(history.epoch, history.history['val_accuracy'],color='green', label='Val')\nplt.xlabel('Epoch')\nplt.xlim([0,30])\nplt.ylabel('Accuracy')\nplt.legend()","metadata":{"executionInfo":{"elapsed":670,"status":"ok","timestamp":1671118777506,"user":{"displayName":"Jayant Meshram","userId":"07212980995143520242"},"user_tz":-330},"id":"xFfVdfYXH4l7","outputId":"3af8876c-a214-495b-e35c-b37acdc504d7","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T15:01:55.500515Z","iopub.execute_input":"2025-01-22T15:01:55.500986Z","iopub.status.idle":"2025-01-22T15:01:55.765348Z","shell.execute_reply.started":"2025-01-22T15:01:55.500949Z","shell.execute_reply":"2025-01-22T15:01:55.763857Z"}},"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"<matplotlib.legend.Legend at 0x7f4613673ee0>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":23},{"cell_type":"markdown","source":"Accuracy curve as well shows high improvement in initial epochs till 5. Then again both, for training and validation, stopped improving and became flatline, yeilding max_val_acc of 93.78.","metadata":{"id":"ULGR-cwxBBEw"},"attachments":{}},{"cell_type":"code","source":"import itertools\nfrom sklearn.metrics import roc_curve, roc_auc_score\n\ndef plot_confusion_matrix(cm, classes,\n                          normalize=False,\n                          title='Confusion matrix',\n                          cmap=plt.cm.Blues):\n    plt.imshow(cm, interpolation='nearest', cmap=cmap)\n    plt.title(title)\n    plt.colorbar()\n    tick_marks = np.arange(len(classes))\n    plt.xticks(tick_marks, classes)\n    plt.yticks(tick_marks, classes)\n\n    if normalize:\n        cm = cm.astype('float') / cm.sum(axis=1)[:, np.newaxis]\n\n    thresh = cm.max() / 2.\n    for i, j in itertools.product(range(cm.shape[0]), range(cm.shape[1])):\n        plt.text(j, i, cm[i, j],\n                 horizontalalignment=\"center\",\n                 color=\"white\" if cm[i, j] > thresh else \"black\")\n\n    plt.tight_layout()\n    plt.ylabel('True label')\n    plt.xlabel('Predicted label')","metadata":{"id":"U16QbGBE_rXM","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T15:02:00.107180Z","iopub.execute_input":"2025-01-22T15:02:00.107616Z","iopub.status.idle":"2025-01-22T15:02:00.120441Z","shell.execute_reply.started":"2025-01-22T15:02:00.107580Z","shell.execute_reply":"2025-01-22T15:02:00.118980Z"}},"outputs":[],"execution_count":24},{"cell_type":"markdown","source":"Loading the data we splitted earlier for Testing. (5000 Real Images)\nNOTE: The testing conducted at this location solely considers authentic images, but if you wish to identify manipulated ones, you can create a brief script to accomplish that.","metadata":{"id":"gJxmmYcKBlkN"},"attachments":{}},{"cell_type":"code","source":"X_test = np.load('ELA_Data/X_test.npy')\nY_test = np.load('ELA_Data/Y_test.npy')","metadata":{"id":"oR6reWGtH4l7","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T15:02:03.804996Z","iopub.execute_input":"2025-01-22T15:02:03.805544Z","iopub.status.idle":"2025-01-22T15:02:12.772034Z","shell.execute_reply.started":"2025-01-22T15:02:03.805503Z","shell.execute_reply":"2025-01-22T15:02:12.770782Z"}},"outputs":[],"execution_count":25},{"cell_type":"code","source":"from sklearn.metrics import confusion_matrix\n\n#predictions on the testing data -> categorical output of shape (len,2)\nY_pred = model.predict(X_test)","metadata":{"executionInfo":{"elapsed":14494,"status":"ok","timestamp":1671118819299,"user":{"displayName":"Jayant Meshram","userId":"07212980995143520242"},"user_tz":-330},"id":"rrmJfX_qH4l9","outputId":"29a47c2a-e7f5-4110-d613-27d3beddbfd8","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T15:02:16.662077Z","iopub.execute_input":"2025-01-22T15:02:16.662565Z","iopub.status.idle":"2025-01-22T15:04:25.735003Z","shell.execute_reply.started":"2025-01-22T15:02:16.662529Z","shell.execute_reply":"2025-01-22T15:04:25.733610Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m157/157\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m125s\u001b[0m 767ms/step\n","output_type":"stream"}],"execution_count":26},{"cell_type":"code","source":"#argmax idx among class 0 and 1\nY_pred_classes = np.argmax(Y_pred,axis = 1) \nY_true = np.argmax(Y_test,axis = 1) ","metadata":{"id":"yqwA9SWaH4l-","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T15:05:54.560907Z","iopub.execute_input":"2025-01-22T15:05:54.561582Z","iopub.status.idle":"2025-01-22T15:05:54.569390Z","shell.execute_reply.started":"2025-01-22T15:05:54.561426Z","shell.execute_reply":"2025-01-22T15:05:54.567728Z"}},"outputs":[],"execution_count":27},{"cell_type":"code","source":"confusion_mtx = confusion_matrix(Y_true, Y_pred_classes) ","metadata":{"id":"yRiThp8FH4l_","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T15:05:57.573039Z","iopub.execute_input":"2025-01-22T15:05:57.573550Z","iopub.status.idle":"2025-01-22T15:05:57.590354Z","shell.execute_reply.started":"2025-01-22T15:05:57.573508Z","shell.execute_reply":"2025-01-22T15:05:57.588830Z"}},"outputs":[],"execution_count":28},{"cell_type":"code","source":"plot_confusion_matrix(confusion_mtx, classes = ['Real','Tampered'])","metadata":{"executionInfo":{"elapsed":5,"status":"ok","timestamp":1671118828700,"user":{"displayName":"Jayant Meshram","userId":"07212980995143520242"},"user_tz":-330},"id":"MScBcyleH4l_","outputId":"6592d5dc-0390-4781-bf45-59e26b40df04","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T15:06:00.634357Z","iopub.execute_input":"2025-01-22T15:06:00.635041Z","iopub.status.idle":"2025-01-22T15:06:00.963170Z","shell.execute_reply.started":"2025-01-22T15:06:00.634995Z","shell.execute_reply":"2025-01-22T15:06:00.961796Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 2 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":29},{"cell_type":"code","source":"model.save('ELA_Model_.h5')","metadata":{"id":"WWRBgVrXH4l_","trusted":true,"execution":{"iopub.status.busy":"2025-01-22T15:06:05.660820Z","iopub.execute_input":"2025-01-22T15:06:05.661215Z","iopub.status.idle":"2025-01-22T15:06:06.807644Z","shell.execute_reply.started":"2025-01-22T15:06:05.661183Z","shell.execute_reply":"2025-01-22T15:06:06.806643Z"}},"outputs":[],"execution_count":30},{"cell_type":"code","source":"","metadata":{"id":"BpvPSekWcbve"},"outputs":[],"execution_count":null}]}